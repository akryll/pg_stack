services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - postgres
      - sqlpad
      - pgadmin
      - drawdb
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:18
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
      DEMO_USER_PASS: ${SQLPAD_CONNECTIONS__avia_demo__password}
    # Убираем публичные порты
    # ports:
    #   - "5432:5432"
    volumes:
      - ./pgdata:${PGDATA}
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./demo-flight-db:/demo-data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - app-network
    depends_on:
      download-file:
        condition: service_completed_successfully

  sqlpad:
    image: sqlpad/sqlpad:latest
    hostname: 'sqlpad'
    # Убираем публичные порты
    # ports:
    #   - '3000:3000'
    environment:
      SQLPAD_ADMIN: ${SQLPAD_ADMIN}
      SQLPAD_ADMIN_PASSWORD: ${SQLPAD_ADMIN_PASSWORD}
      SQLPAD_APP_LOG_LEVEL: ${SQLPAD_APP_LOG_LEVEL}
      SQLPAD_WEB_LOG_LEVEL: ${SQLPAD_WEB_LOG_LEVEL}
      SQLPAD_SEED_DATA_PATH: ${SQLPAD_SEED_DATA_PATH}
      SQLPAD_CONNECTIONS__avia_demo__name: ${SQLPAD_CONNECTIONS__avia_demo__name}
      SQLPAD_CONNECTIONS__avia_demo__driver: ${SQLPAD_CONNECTIONS__avia_demo__driver}
      SQLPAD_CONNECTIONS__avia_demo__host: ${SQLPAD_CONNECTIONS__avia_demo__host}
      SQLPAD_CONNECTIONS__avia_demo__database: ${SQLPAD_CONNECTIONS__avia_demo__database}
      SQLPAD_CONNECTIONS__avia_demo__username: ${SQLPAD_CONNECTIONS__avia_demo__username}
      SQLPAD_CONNECTIONS__avia_demo__password: ${SQLPAD_CONNECTIONS__avia_demo__password}
      SQLPAD_CONNECTIONS__avia_demo__multiStatementTransactionEnabled: ${SQLPAD_CONNECTIONS__avia_demo__multiStatementTransactionEnabled}
      SQLPAD_CONNECTIONS__avia_demo__idleTimeoutSeconds: ${SQLPAD_CONNECTIONS__avia_demo__idleTimeoutSeconds}
    volumes:
      - ./seed-data:/etc/sqlpad/seed-data
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    # Убираем публичные порты
    # ports:
    #   - 15432:${PGADMIN_LISTEN_PORT}
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  drawdb:
    build: ./drawdb
    hostname: 'drawdb'
    # Убираем публичные порты
    # ports:
    #   - '3001:80'
    volumes:
      - ./seed-data:/etc/sqlpad/seed-data
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  download-file:
    image: curlimages/curl:latest
    command: |
      sh -c "
      if [ ! -f /data/${PG_DEMO_DATA_FILE} ]; then
        echo 'Downloading file...'
        wget -O /data/${PG_DEMO_DATA_FILE} https://edu.postgrespro.ru/${PG_DEMO_DATA_FILE}
      else
        echo 'File already exists, skipping download'
      fi
      "
    volumes:
      - ./demo-flight-db:/data
    user: root
    restart: on-failure:1
    networks:
      - app-network

volumes:
  pgdata:
    driver: local
  pgadmin:
  sqlpad:

networks:
  app-network:
    driver: bridge